CREATE OR REPLACE PACKAGE MASTER.Kv AS
/******************************************************************************
   NAME:       kv
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        03.04.2006             1. Created this package.
******************************************************************************/

  PROCEDURE insert_operation(
PREQUESTNO  NUMBER,POPERSEQ    NUMBER,POPERTYPE VARCHAR2,POPERATION VARCHAR2,POPERCOMMENT VARCHAR,
PDDLDATE    DATE, pobjectname VARCHAR2,POBJECTTYPE VARCHAR2,Poperationtype VARCHAR2,PSQLTEXT VARCHAR2
              );
/* Burak Demirsoy Sadece Spec Geçişlerinde Package Body'nınde geçmesi sorun yaratıyor. Bunu önlemek için yapıldı.  20/11/2014 */
  PROCEDURE insert_spec_only;
  FUNCTION select_spec_only(pOBJECT_NAME VARCHAR2) RETURN VARCHAR2;
/* Burak Demirsoy Sadece Spec Geçişlerinde Package Body'nınde geçmesi sorun yaratıyor. Bunu önlemek için yapıldı.  20/11/2014 */

  PROCEDURE create_request(pusername VARCHAR2, psystemname VARCHAR2, pstartdate DATE, penddate DATE );
  procedure create_operations_from_isistek ( plivesystemname varchar2 ,pkurssystemname varchar2,pstartdate date ,penddate date );
  procedure copy_requests ( psource_appname varchar2 ,ptarget_appname varchar2,pstartdate date ,penddate date );

END Kv;
/


CREATE OR REPLACE PACKAGE BODY MASTER.Kv IS

PROCEDURE insert_operation(
PREQUESTNO  NUMBER,POPERSEQ    NUMBER,POPERTYPE VARCHAR2,POPERATION VARCHAR2,POPERCOMMENT VARCHAR,
PDDLDATE    DATE, pobjectname VARCHAR2,POBJECTTYPE VARCHAR2,Poperationtype VARCHAR2,PSQLTEXT VARCHAR2
              ) IS
BEGIN

INSERT INTO operation  (REQUESTNO,OPERNO,OPERTYPE,OPERATION,OPERCOMMENT )
   VALUES                     (prequestno,poperseq,popertype,poperation,POPERCOMMENT);

   EXCEPTION WHEN OTHERS THEN
   DBMS_OUTPUT.PUT_LINE
   ('iş isteğe eklerken insertoperation da hata oldu '||
   TO_DATE(pddldate,'dd-mm-yyyy hh24:mi')||' '||
   pobjectname||' '||
   pOBJECTTYPE||' '||
   Poperationtype||' '||
   TO_CHAR(prequestno)||' '||
   TO_CHAR(poperseq));

END;

/* Burak Demirsoy Sadece Spec Geçişlerinde Package Body'nınde geçmesi sorun yaratıyor. Bunu önlemek için yapıldı.  20/11/2014 */
PROCEDURE insert_spec_only IS

   vCount      NUMBER(2);

BEGIN

   SELECT COUNT(*) INTO vCount FROM SPEC_ONLY
      WHERE REQUESTDATE = TRUNC(SYSDATE) AND ROWNUM < 2;

   IF vCount = 1 THEN
      RETURN;
   END IF;

   DELETE FROM SPEC_ONLY;
   INSERT INTO SPEC_ONLY
      SELECT TRUNC (SYSDATE),
          OWNER,
          OBJECT_NAME,
          COUNT (*) COUNT
          FROM dba_objects WHERE     (owner, object_name) IN
              (SELECT USERNAME, OBJECTNAME
                 FROM SYS.DDL_LOG
                WHERE     DDLDATE > TRUNC(SYSDATE - 7)
                      AND OBJECTTYPE IN ('PACKAGE')
                      AND OPERATIONTYPE IN ('CREATE')
               MINUS
               SELECT USERNAME, OBJECTNAME
                 FROM SYS.DDL_LOG
                WHERE     DDLDATE > TRUNC(SYSDATE - 7)
                      AND OBJECTTYPE IN ('PACKAGE BODY')
                      AND OPERATIONTYPE IN ('CREATE'))
                      GROUP BY  OWNER, OBJECT_NAME
                      HAVING COUNT(*) = 1;
   COMMIT;


EXCEPTION WHEN OTHERS THEN
   DBMS_OUTPUT.PUT_LINE   ('insert_spec_only hata aldı '|| sqlerrm );

END;


FUNCTION select_spec_only(pOBJECT_NAME VARCHAR2) RETURN VARCHAR2 IS

   vText      VARCHAR2(300);

BEGIN

   SELECT 'DROP PACKAGE BODY ' || OWNER || '.' || OBJECT_NAME || ';' INTO vText FROM SPEC_ONLY
      WHERE OBJECT_NAME = pOBJECT_NAME;

   RETURN vText;

EXCEPTION WHEN OTHERS THEN
   RETURN ' ';
END;
/* Burak Demirsoy Sadece Spec Geçişlerinde Package Body'nınde geçmesi sorun yaratıyor. Bunu önlemek için yapıldı.  20/11/2014 */

PROCEDURE create_request(pusername VARCHAR2, psystemname VARCHAR2, pstartdate DATE, penddate DATE ) IS

vrequestno      NUMBER(10);
vobjectname     VARCHAR2(200) ;
vOBJECTTYPE     VARCHAR2(30);
vOPERATIONTYPE  VARCHAR2(50 );
vsqltext        VARCHAR2(1000);
voperseq        NUMBER;
vddldate        DATE;
vCount          NUMBER;
vText           VARCHAR2(300);

-- 14/03/2019 bazı uygulamaların her gün akşam tablo/index DROP etmesi nedeniyle problem yaşanıyor.
-- Bunlar geçiş olmuş gibi kurs sistemde yeni giriş yaratıyor.
-- Bunun engellenmesi için script değiştirildi.
/*
CURSOR coperation IS
SELECT ddldate,objectname,objecttype,operationtype,sqltext2  FROM
(SELECT ddldate,objectname,objecttype,operationtype,SUBSTR(RTRIM(REPLACE(sqltext,CHR(0),' '))||';',1,1000) sqltext2 FROM ddl_log WHERE
NOT (
( objecttype='TABLESPACE' ) OR
( objecttype='TABLE' AND operationtype='TRUNCATE') OR
(  objecttype='PACKAGE BODY'  AND ( operationtype='ALTER' OR operationtype='CREATE') ) OR
(  objecttype='PACKAGE'  AND      ( operationtype='ALTER' OR operationtype='CREATE') ) OR
(  objecttype='FUNCTION'  AND operationtype='ALTER' ) OR
(  objecttype='PROCEDURE'  AND operationtype='ALTER' )  OR
 ( objectname LIKE 'ORA_TEMP%' ) OR ( objectname LIKE 'SYS_TEMP%' )
)
AND
username=pusername
and applyflag='0'
--and ACTION='DY_CHANGE'
AND ddldate BETWEEN pstartdate AND penddate
UNION ALL
SELECT  ddldate, objectname,objecttype,operationtype,SUBSTR(RTRIM(REPLACE(sqltext,CHR(0),' '))||';',1,1000) sqltext2 FROM
(SELECT  ddldate, objectname,objecttype,operationtype, SQLTEXT , row_number() OVER(PARTITION BY objectname ORDER BY objecttype) rn FROM
ddl_log WHERE
( ( objecttype='PACKAGE BODY' AND   operationtype='CREATE' ) OR
(   objecttype='PACKAGE' AND   operationtype='CREATE' ) )AND
username=pusername AND
applyflag='0'
--and  ACTION='DY_CHANGE'
and ddldate BETWEEN pstartdate AND penddate)
WHERE rn=1
)
ORDER BY ddldate ASC;
*/

CURSOR coperation IS
/* Formatted on 13.03.2019 17:52:18 (QP5 v5.300) */
  SELECT ddldate,
         objectname,
         objecttype,
         operationtype,
         sqltext2
    FROM (SELECT ddldate,
                 objectname,
                 objecttype,
                 operationtype,
                 SUBSTR (RTRIM (REPLACE (sqltext, CHR (0), ' ')) || ';',
                         1,
                         1000)
                     sqltext2
            FROM ddl_log
           WHERE     NOT (   (objecttype = 'TABLESPACE')
                          OR (    objecttype = 'TABLE'
                              AND operationtype = 'TRUNCATE')
                          OR (    objecttype = 'PACKAGE BODY'
                              AND (   operationtype = 'ALTER'
                                   OR operationtype = 'CREATE'))
                          OR (    objecttype = 'PACKAGE'
                              AND (   operationtype = 'ALTER'
                                   OR operationtype = 'CREATE'))
                          OR (    objecttype = 'FUNCTION'
                              AND operationtype = 'ALTER')
                          OR (    objecttype = 'PROCEDURE'
                              AND operationtype = 'ALTER')
                          OR (objectname LIKE 'ORA_TEMP%')
                          OR (objectname LIKE 'SYS_TEMP%'))
                 AND username = pusername
                 AND applyflag = '0'
                 and ACTION='DY_CHANGE'
                 AND ddldate BETWEEN pstartdate AND penddate
          UNION ALL
          SELECT ddldate,
                 objectname,
                 objecttype,
                 operationtype,
                 SUBSTR (RTRIM (REPLACE (sqltext, CHR (0), ' ')) || ';',
                         1,
                         1000)
                     sqltext2
            FROM (SELECT ddldate,
                 objectname,
                 objecttype,
                 operationtype,
                 SQLTEXT,
                 ROW_NUMBER ()
                     OVER (PARTITION BY objectname, operationtype ORDER BY objecttype)
                 rn
            FROM ddl_log
           WHERE     NOT (   (objecttype = 'TABLESPACE')
                          OR (    objecttype = 'TABLE'
                              AND operationtype = 'TRUNCATE')
                          OR (    objecttype = 'PACKAGE BODY'
                              AND (   operationtype = 'ALTER'
                                   OR operationtype = 'CREATE'))
                          OR (    objecttype = 'PACKAGE'
                              AND (   operationtype = 'ALTER'
                                   OR operationtype = 'CREATE'))
                          OR (    objecttype = 'FUNCTION'
                              AND operationtype = 'ALTER')
                          OR (    objecttype = 'PROCEDURE'
                              AND operationtype = 'ALTER')
                          OR (objectname LIKE 'ORA_TEMP%')
                          OR (objectname LIKE 'SYS_TEMP%'))
                 AND username = pusername
                 AND applyflag = '0'
                 and ACTION IS NULL
                 AND ddldate BETWEEN pstartdate AND penddate)
           WHERE rn = 1
          UNION ALL
          SELECT ddldate,
                 objectname,
                 objecttype,
                 operationtype,
                 SUBSTR (RTRIM (REPLACE (sqltext, CHR (0), ' ')) || ';',
                         1,
                         1000)
                     sqltext2
            FROM (SELECT ddldate,
                         objectname,
                         objecttype,
                         operationtype,
                         SQLTEXT,
                         ROW_NUMBER ()
                             OVER (PARTITION BY objectname ORDER BY objecttype)
                             rn
                    FROM ddl_log
                   WHERE     (   (    objecttype = 'PACKAGE BODY'
                                  AND operationtype = 'CREATE')
                              OR (    objecttype = 'PACKAGE'
                                  AND operationtype = 'CREATE'))
                         AND username = pusername
                         AND applyflag = '0'
                         --and  ACTION='DY_CHANGE'
                         AND ddldate BETWEEN pstartdate AND penddate)
           WHERE rn = 1)
ORDER BY ddldate ASC;


BEGIN

dbms_output.enable(null);

DBMS_OUTPUT.PUT_LINE( '************************************************ ');
DBMS_OUTPUT.PUT_LINE( '************************************************ ');
DBMS_OUTPUT.PUT_LINE( 'Kurs veritabanı Güncellemesi için iş istek Oluşturma ');
DBMS_OUTPUT.PUT_LINE( 'Sistem Adı : '||PsystemName);
DBMS_OUTPUT.PUT_LINE( 'User   Adı : '||Pusername);
DBMS_OUTPUT.PUT_LINE( 'Zaman Aralığı : '||' '||TO_CHAR(pstartdate,'dd-mm-yyyy hh24:mi')||' - '||TO_CHAR(penddate,'dd-mm-yyyy hh24:mi'));
DBMS_OUTPUT.PUT_LINE( 'İşin Çalışma Zamanı : '||TO_CHAR(SYSDATE,'dd-mm-yyyy hh24:mi'));
DBMS_OUTPUT.PUT_LINE( '************************************************ ');
DBMS_OUTPUT.PUT_LINE( '************************************************ ');

/* Burak Demirsoy  -- İlgili sema için geçiş yapılmış mı ?    18/04/2014 */
/* Yapılmış ise işleme devam, yapılmamış ise programdan çıkılıyor       */
  SELECT count(*) INTO vCount
    FROM (SELECT ddldate,
                 objectname,
                 objecttype,
                 operationtype,
                 SUBSTR (RTRIM (REPLACE (sqltext, CHR (0), ' ')) || ';',
                         1,
                         1000)
                    sqltext2
            FROM ddl_log
           WHERE     NOT (   (objecttype = 'TABLESPACE')
                          OR (    objecttype = 'TABLE'
                              AND operationtype = 'TRUNCATE')
                          OR (    objecttype = 'PACKAGE BODY'
                              AND (   operationtype = 'ALTER'
                                   OR operationtype = 'CREATE'))
                          OR (    objecttype = 'PACKAGE'
                              AND (   operationtype = 'ALTER'
                                   OR operationtype = 'CREATE'))
                          OR (    objecttype = 'FUNCTION'
                              AND operationtype = 'ALTER')
                          OR (    objecttype = 'PROCEDURE'
                              AND operationtype = 'ALTER')
/* Burak Demirsoy  -- SUMMARY ALTER OLARAK GELEN İSTEKLER RED EDİLİYOR    13/05/2014 */
                          OR (    objecttype = 'SUMMARY'
                              AND operationtype = 'ALTER')
/* Burak Demirsoy  -- SUMMARY ALTER OLARAK GELEN İSTEKLER RED EDİLİYOR    13/05/2014 */
                          OR (objectname LIKE 'ORA_TEMP%')
                          OR (objectname LIKE 'SYS_TEMP%'))
                 AND username = pusername
                 AND applyflag = '0'
                -- AND ACTION = 'DY_CHANGE'
                 AND ddldate BETWEEN pstartdate AND penddate
          UNION ALL
          SELECT ddldate,
                 objectname,
                 objecttype,
                 operationtype,
                 SUBSTR (RTRIM (REPLACE (sqltext, CHR (0), ' ')) || ';',
                         1,
                         1000)
                    sqltext2
            FROM (SELECT ddldate,
                         objectname,
                         objecttype,
                         operationtype,
                         SQLTEXT,
                         ROW_NUMBER ()
                            OVER (PARTITION BY objectname ORDER BY objecttype)
                            rn
                    FROM ddl_log
                   WHERE     (   (    objecttype = 'PACKAGE BODY'
                                  AND operationtype = 'CREATE')
                              OR (    objecttype = 'PACKAGE'
                                  AND operationtype = 'CREATE'))
                         AND username = pusername
                         AND applyflag = '0'
                       --  AND ACTION = 'DY_CHANGE'
                         AND ddldate BETWEEN pstartdate AND penddate)
           WHERE rn = 1);

IF vCount = 0 THEN
   RETURN;
END IF;
/* Burak Demirsoy  -- İlgili sema için geçiş yapılmış mı ?    18/04/2014 */
/* Yapılmış ise işleme devam, yapılmamış ise programdan çıkılıyor       */


/* Burak Demirsoy Sadece Spec Geçişlerinde Package Body'nınde geçmesi sorun yaratıyor. Bunu önlemek için yapıldı.  20/11/2014 */
   insert_spec_only;
/* Burak Demirsoy Sadece Spec Geçişlerinde Package Body'nınde geçmesi sorun yaratıyor. Bunu önlemek için yapıldı.  20/11/2014 */

SELECT requestno.NEXTVAL  INTO vrequestno FROM dual;

INSERT INTO request
( requestno,reqdate,username,status,reqcomment,planno,appname,dbaname,finishdate,
opertime,whofinished,serno1,operdate,approver,projectname,projectseqno)
VALUES( vrequestno, SYSDATE,'aniak','N','Otomatik request from KV package from '||to_char(pstartdate,'dd-mm-yyyy hh24:mi')||' to '
||to_char(penddate,'dd-mm-yyyy hh24:mi'),'KURS',psystemname,NULL,NULL,
'00:00',NULL,NULL,SYSDATE,NULL,NULL,NULL);

voperseq:=1;
OPEN coperation;
LOOP
  FETCH coperation INTO vddldate,vobjectname ,vOBJECTTYPE,vOPERATIONTYPE,vsqltext ;
  EXIT WHEN coperation%NOTFOUND;

  /* Exceptionlar */

  IF pusername='DLCLIVE' AND vobjectname ='SIL_KOCFIRM'
  THEN
     voperseq:=voperseq-1;
     GOTO say;
  END IF;

 /* exceptionlar bitti */



 IF  voperseq > 50 THEN

  DBMS_OUTPUT.PUT_LINE( ' ');
  DBMS_OUTPUT.PUT_LINE( '************************************************ ');
  DBMS_OUTPUT.PUT_LINE( ' ');
  DBMS_OUTPUT.PUT_LINE ('Oluşturulan  İstek No '||TO_CHAR(vrequestno)||' '||'Operasyon sayısı '||TO_CHAR(voperseq-1));
  DBMS_OUTPUT.PUT_LINE( ' ');
  DBMS_OUTPUT.PUT_LINE( '************************************************ ');
  DBMS_OUTPUT.PUT_LINE( ' ');

  voperseq:=1;

  SELECT requestno.NEXTVAL   INTO vrequestno FROM dual;



  INSERT INTO request
  ( requestno,reqdate,username,status,reqcomment,planno,appname,dbaname,finishdate,
  opertime,whofinished,serno1,operdate,approver,projectname,projectseqno)
  VALUES( vrequestno, SYSDATE,'aniak','N','Otomatik request from KV package from '||to_char(pstartdate,'dd-mm-yyyy hh24:mi')||' to '
||to_char(penddate,'dd-mm-yyyy hh24:mi'),'KURS',psystemname,NULL,NULL,
  '00:00',NULL,NULL,SYSDATE,NULL,NULL,NULL);

    END IF;

 /* No operation */

  IF
  ( vobjecttype='SNAPSHOT'  AND voperationtype= 'ALTER' )  OR
  ( vobjecttype='FUNCTION'  AND voperationtype= 'ALTER' )  OR
  ( vobjecttype='PACKAGE'  AND voperationtype= 'ALTER' )  OR
  ( vobjecttype='PACKAGE BODY'  AND voperationtype= 'ALTER' )  OR
  ( vobjecttype='PROCEDURE'  AND voperationtype= 'ALTER' )  OR
  ( vobjecttype='TABLESPACE'  AND voperationtype= 'ALTER' )  OR
  ( vobjecttype='TABLESPACE'  AND voperationtype= 'CREATE' )  OR
  ( vobjecttype='TABLESPACE'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='TRIGGER'  AND voperationtype= 'ALTER' )  OR
  ( vobjecttype='USER'  AND voperationtype= 'ALTER' )  OR
  ( vobjecttype='USER'  AND voperationtype= 'CREATE' )  OR
  ( vobjecttype='USER'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='VIEW'  AND voperationtype= 'ALTER' ) OR
  ( vobjecttype='SUMMARY'  AND voperationtype= 'ALTER' ) OR
  ( vobjecttype='TABLE'  AND voperationtype= 'TRUNCATE' )  OR
  ( vobjecttype='SEQUENCE'  AND voperationtype= 'ALTER' )
  THEN
     voperseq:=voperseq-1;
     GOTO say;
  END IF;

  /* SCRORA */

  IF
  ( vobjecttype='JAVA'        AND voperationtype= 'CREATE') OR
  ( vobjecttype='COLUMN'        AND voperationtype= 'COMMENT') OR
  ( vobjecttype='SNAPSHOT LOG'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='SNAPSHOT LOG'  AND voperationtype= 'CREATE' )  OR
  ( vobjecttype='DATABASE LINK'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='DIRECTORY'  AND voperationtype= 'CREATE' )  OR
  ( vobjecttype='FUNCTION'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='INDEX'  AND voperationtype= 'CREATE' )  OR
  ( vobjecttype='INDEX'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='INDEX'  AND voperationtype= 'ALTER' )  OR
  ( vobjecttype='LIBRARY'  AND voperationtype= 'CREATE' )  OR
  ( vobjecttype='LIBRARY'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='OBJECT PRIVILEGE'  AND voperationtype= 'GRANT' )  OR
  ( vobjecttype='OBJECT PRIVILEGE'  AND voperationtype= 'REVOKE' )  OR
  ( vobjecttype='PACKAGE'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='PACKAGE BODY'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='PROCEDURE'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='ROLE PRIVILEGE'  AND voperationtype= 'GRANT' )  OR
  ( vobjecttype='SEQUENCE'  AND voperationtype= 'CREATE' )  OR
  ( vobjecttype='SEQUENCE'  AND voperationtype= 'DROP' )  OR
  -- BD 14/03/2013 sequence - rename eklendi
  ( vobjecttype='SEQUENCE'  AND voperationtype= 'RENAME' )  OR
  ( vobjecttype='SNAPSHOT'  AND voperationtype= 'CREATE' )  OR
  ( vobjecttype='SNAPSHOT'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='SUMMARY'  AND voperationtype= 'CREATE' )  OR
  ( vobjecttype='SUMMARY'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='SYNONYM'  AND voperationtype= 'CREATE' )  OR
  ( vobjecttype='SYNONYM'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='SYSTEM PRIVILEGE'  AND voperationtype= 'GRANT' )  OR
  ( vobjecttype='SYSTEM PRIVILEGE'  AND voperationtype= 'REVOKE' )  OR
  ( vobjecttype='TABLE'  AND voperationtype= 'ALTER' )  OR
  ( vobjecttype='TABLE'  AND voperationtype= 'RENAME' )  OR
  ( vobjecttype='TABLE'  AND voperationtype= 'COMMENT' )  OR
  ( vobjecttype='TABLE'  AND voperationtype= 'DROP' )  OR
  ( vobjecttype='TABLE'  AND voperationtype= 'ANALYZE' )  OR
  -- BD 07/05/2014 Aşağıdaki bölüm SCRORA olacak şekilde ayarlandı
   ( vobjecttype='TYPE'         AND voperationtype= 'DROP' )   OR
  -- BD 07/05/2014 Aşağıdaki bölüm SCRORA olacak şekilde ayarlandı
  ( vobjecttype='VIEW'  AND voperationtype= 'DROP' ) OR
  ( vobjecttype='CONTEXT'  AND voperationtype= 'CREATE' ) OR
  ( vobjecttype='CONTEXT'  AND voperationtype= 'DROP' ) OR
  ( vobjecttype='CONTEXT'  AND voperationtype= 'ALTER' ) or
  ( vobjecttype='TRIGGER'  AND voperationtype= 'DROP' )
     THEN
    insert_operation(vrequestno,voperseq,'SCRORA',vsqltext,NULL,
                        vddldate,vobjectname,vobjecttype,voperationtype,vsqltext);
    GOTO say;
  END IF;

  IF ( vobjecttype='PACKAGE BODY' AND voperationtype='CREATE' )  OR
     ( vobjecttype='PACKAGE'      AND voperationtype='CREATE' )  OR
     ( vobjecttype='TYPE'         AND voperationtype= 'CREATE' ) OR
  -- BD 07/05/2014 Aşağıdaki bölüm SCRORA olacak şekilde ayarlandı
     --( vobjecttype='TYPE'         AND voperationtype= 'DROP' )   OR
  -- BD 07/05/2014 Aşağıdaki bölüm SCRORA olacak şekilde ayarlandı
     ( vobjecttype='TYPE'         AND voperationtype= 'ALTER' )  OR
     ( vobjecttype='TYPE'         AND voperationtype= 'ALTER' )  OR
     ( vobjecttype='TYPE BODY'    AND voperationtype= 'CREATE' ) OR
     ( vobjecttype='TYPE BODY'    AND voperationtype= 'ALTER' )
     THEN
     insert_operation(vrequestno,voperseq,'PACKRP',vobjectname,NULL,
                        vddldate,vobjectname,vobjecttype,voperationtype,vsqltext);

/* Burak Demirsoy Sadece Spec Geçişlerinde Package Body'nınde geçmesi sorun yaratıyor. Bunu önlemek için yapıldı.  20/11/2014 */
    IF vobjecttype='PACKAGE BODY' THEN
       vText :=  select_spec_only(vobjectname);
       IF vText != ' ' THEN
          voperseq:=voperseq+1;
          insert_operation(vrequestno,voperseq,'SCRORA',vsqltext,NULL,
                           vddldate,vobjectname,vobjecttype,'DROP',vText);
       END IF;
    END IF;
/* Burak Demirsoy Sadece Spec Geçişlerinde Package Body'nınde geçmesi sorun yaratıyor. Bunu önlemek için yapıldı.  20/11/2014 */

    GOTO say;
  END IF;

  IF ( vobjecttype='TRIGGER'      AND voperationtype='CREATE' )
     THEN
    insert_operation(vrequestno,voperseq,'TRIGCR',vobjectname,NULL,
                        vddldate,vobjectname,vobjecttype,voperationtype,vsqltext);
    GOTO say;
  END IF;

  IF ( vobjecttype='TABLE'      AND voperationtype='CREATE' )
     THEN
     IF INSTR(vsqltext, 'GLOBAL TEMPORARY TABLE') > 0 THEN
        insert_operation(vrequestno,voperseq,'SCRORA',vsqltext,NULL,
                            vddldate,vobjectname,vobjecttype,voperationtype,vsqltext);
     ELSE
        insert_operation(vrequestno,voperseq,'TABCR',vobjectname,NULL,
                            vddldate,vobjectname,vobjecttype,voperationtype,vsqltext);
     END IF;
    GOTO say;
  END IF;
    /*Tolga*/
    IF ( vobjecttype='SYNONYM'      AND voperationtype='ALTER' )
     THEN
     insert_operation(vrequestno,voperseq,'SYNCR',vobjectname,NULL,
                        vddldate,vobjectname,vobjecttype,voperationtype,vsqltext);
    GOTO say;
  END IF;
 /*Tolga*/
  IF ( vobjecttype='PROCEDURE'     AND voperationtype='CREATE' )
     THEN
     insert_operation(vrequestno,voperseq,'PROCCR',vobjectname,NULL,
                        vddldate,vobjectname,vobjecttype,voperationtype,vsqltext);
    GOTO say;
  END IF;

  IF ( vobjecttype='FUNCTION'     AND voperationtype='CREATE' )
     THEN
     insert_operation(vrequestno,voperseq,'FUNCR',vobjectname,NULL,
                        vddldate,vobjectname,vobjecttype,voperationtype,vsqltext);
    GOTO say;
  END IF;

  IF ( vobjecttype='VIEW'     AND voperationtype='CREATE' )
     THEN
    insert_operation(vrequestno,voperseq,'VIEWCR',vobjectname,NULL,
                        vddldate,vobjectname,vobjecttype,voperationtype,vsqltext);
    GOTO say;
  END IF;

  IF ( vobjecttype='DATABASE LINK'     AND voperationtype='CREATE' )
     THEN
  DBMS_OUTPUT.PUT_LINE('Dikkat Database link create ediliyor   ');
  DBMS_OUTPUT.PUT_LINE('Bu işlem için operasyon oluşturulmadı, Nöbetçi bu DB linki yaratmalıdır  ');
  DBMS_OUTPUT.PUT_LINE('İşlemin Tarihi : '||TO_CHAR(vddldate,'dd-mm-yyyy hh24:mi'));
  DBMS_OUTPUT.PUT_LINE('Obje Adı : '||vobjectname);
  DBMS_OUTPUT.PUT_LINE('Obje Türü : '||vOBJECTTYPE);
  DBMS_OUTPUT.PUT_LINE('Operasyon Tipi : '||voperationtype );
    GOTO say;
  END IF;

DBMS_OUTPUT.PUT_LINE('Dikkat HATA OLUŞTU  ');
DBMS_OUTPUT.PUT_LINE('Operasyonu bulunamıyan ddl_log bulundu, işlemler Rollback oldu ');
DBMS_OUTPUT.PUT_LINE('İşlemin Tarihi : '||TO_CHAR(vddldate,'dd-mm-yyyy hh24:mi'));
DBMS_OUTPUT.PUT_LINE('Obje Adı : '||vobjectname);
DBMS_OUTPUT.PUT_LINE('Obje Türü : '||vOBJECTTYPE);
DBMS_OUTPUT.PUT_LINE('Operasyon Tipi : '||voperationtype );
DBMS_OUTPUT.PUT_LINE( '************************************************ ');

ROLLBACK;

  INSERT INTO KURS_PROBLEM  (USERNAME, SYSTEMNAME, STARTDATE, ENDDATE, OBJECTNAME, OBJECTTYPE, OPERATIONTYPE, DDLDATE)
      VALUES                (pusername, psystemname, pstartdate, pstartdate, vobjectname, vOBJECTTYPE, voperationtype, vddldate);

COMMIT;
RETURN;

<<say>>

voperseq:=voperseq+1;

END LOOP;

CLOSE coperation;

IF voperseq  = 1
   THEN
      -- ROLLBACK; ergün için yapıldı istekler 50 nin katı olduğunda boşda olsa istek basmalı.
      commit;
   DBMS_OUTPUT.PUT_LINE( ' ');
   DBMS_OUTPUT.PUT_LINE( 'Girilen zaman diliminde yapılan bir sign off bulunamıştır ');
   DBMS_OUTPUT.PUT_LINE( 'Herhangi bir İş İstek oluşturulmamıştır');
   DBMS_OUTPUT.PUT_LINE( '************************************************ ');

   ELSE
       COMMIT;
    DBMS_OUTPUT.PUT_LINE( ' ');
    DBMS_OUTPUT.PUT_LINE( '************************************************ ');
    DBMS_OUTPUT.PUT_LINE( ' ');
    DBMS_OUTPUT.PUT_LINE ('Oluşturulan  İstek No '||TO_CHAR(vrequestno)||' '||'Operasyon sayısı '||TO_CHAR(voperseq-1));
    DBMS_OUTPUT.PUT_LINE( ' ');
    DBMS_OUTPUT.PUT_LINE( '************************************************ ');
    DBMS_OUTPUT.PUT_LINE( ' ');
    DBMS_OUTPUT.PUT_LINE( 'Tüm işlem Başarılı Bitirilmiştir');
END IF ;

END;


procedure create_operations_from_isistek ( plivesystemname varchar2 ,pkurssystemname varchar2,pstartdate date ,penddate date ) is

vrequestno NUMBER(10);
vnumberofoperations number;

begin

DBMS_OUTPUT.PUT_LINE( '************************************************ ');
DBMS_OUTPUT.PUT_LINE( '************************************************ ');
DBMS_OUTPUT.PUT_LINE( 'Kurs veritabanı Güncellemesi için Yapılan İş İsteklerden Yeni İş İstek Oluşturma ');
DBMS_OUTPUT.PUT_LINE( 'Live sistem : '||plivesystemname);
DBMS_OUTPUT.PUT_LINE( 'Kurs sistem : '||pkurssystemname);
DBMS_OUTPUT.PUT_LINE( 'Zaman Aralığı : '||' '||TO_CHAR(pstartdate,'dd-mm-yyyy hh24:mi')||' - '||TO_CHAR(penddate,'dd-mm-yyyy hh24:mi'));
DBMS_OUTPUT.PUT_LINE( 'İşin Çalışma Zamanı : '||TO_CHAR(SYSDATE,'dd-mm-yyyy hh24:mi'));
DBMS_OUTPUT.PUT_LINE( '************************************************ ');
DBMS_OUTPUT.PUT_LINE( '************************************************ ');


SELECT  nvl(count(*),0) into vnumberofoperations
  FROM (SELECT r.requestno, o.operno, o.opertype, o.operation, r.finishdate,
               ROW_NUMBER () OVER (ORDER BY r.finishdate, o.operno) rn
          FROM request r, operation o
         WHERE r.requestno = o.requestno
           AND r.appname = plivesystemname
           AND (r.finishdate BETWEEN pstartdate AND penddate));

if   vnumberofoperations > 999 then
    DBMS_OUTPUT.PUT_LINE( ' Operasyon sayısı 999 dan fazla istek oluşturulmadı ');
    return;
  end if;

if  vnumberofoperations = 0  then
   DBMS_OUTPUT.PUT_LINE( ' ');
   DBMS_OUTPUT.PUT_LINE( 'Girilen zaman diliminde yapılan bir sign off bulunamıştır ');
   DBMS_OUTPUT.PUT_LINE( 'Herhangi bir İş İstek oluşturulmamıştır');
   DBMS_OUTPUT.PUT_LINE( '************************************************ ');
else

SELECT requestno.NEXTVAL  INTO vrequestno FROM dual;

INSERT INTO request
( requestno,reqdate,username,status,reqcomment,planno,appname,dbaname,finishdate,
opertime,whofinished,serno1,operdate,approver,projectname,projectseqno)
VALUES( vrequestno, SYSDATE,'aniak','N','Otomatik request from KV package from '||to_char(pstartdate,'dd-mm-yyyy hh24:mi')||' to '
||to_char(penddate,'dd-mm-yyyy hh24:mi'), 'KURS',pkurssystemname,NULL,NULL,
'00:00',NULL,NULL,SYSDATE,NULL,NULL,NULL);

/* operasyonlar requestlerdeki finishdate'e göre Operno sırasında yüklenir */

insert into operation (REQUESTNO,OPERNO,OPERTYPE,OPERATION,OPERCOMMENT)
SELECT vrequestno, rn operno, opertype, operation,'requestno : '||to_char(requestno)||' operno : '||to_char(operno)
  FROM (SELECT r.requestno, o.operno, o.opertype, o.operation, r.finishdate,
               ROW_NUMBER () OVER (ORDER BY r.finishdate, o.operno) rn
          FROM request r, operation o
         WHERE r.requestno = o.requestno
           AND r.appname = plivesystemname
           AND (r.finishdate BETWEEN pstartdate AND penddate));

    DBMS_OUTPUT.PUT_LINE( ' ');
    DBMS_OUTPUT.PUT_LINE( '************************************************ ');
    DBMS_OUTPUT.PUT_LINE( ' ');
    DBMS_OUTPUT.PUT_LINE ('Oluşturulan  İstek No '||TO_CHAR(vrequestno)||' '||'Operasyon sayısı '||TO_CHAR( vnumberofoperations));
    DBMS_OUTPUT.PUT_LINE( ' ');
    DBMS_OUTPUT.PUT_LINE( '************************************************ ');
    DBMS_OUTPUT.PUT_LINE( ' ');
    DBMS_OUTPUT.PUT_LINE( 'Tüm işlem Başarılı Bitirilmiştir');

commit;
end if;

exception when others then
    DBMS_OUTPUT.PUT_LINE( ' ');
    DBMS_OUTPUT.PUT_LINE( '************************************************ ');
       DBMS_OUTPUT.PUT_LINE( 'Dikkat Hata var.. İstek oluşturulamadı ');
    RAISE_APPLICATION_ERROR(-20000, SQLERRM);



end;

procedure copy_requests ( psource_appname varchar2 ,ptarget_appname varchar2,pstartdate date ,penddate date ) is

cursor req is
select requestno from request where appname =psource_appname and
 planno='KURS' and  status='N' and  reqdate between pstartdate and penddate order by reqdate;

vrequestno request.requestno%type;
vreqdate   request.reqdate%type;
vopertime  request.opertime%type;
voperdate  request.operdate%type;
vrequestno_nextval request.requestno%type;

begin

DBMS_OUTPUT.PUT_LINE( '************************************************ ');
DBMS_OUTPUT.PUT_LINE( '************************************************ ');
DBMS_OUTPUT.PUT_LINE( 'Migration Veritabanları Güncellemesi için İş İstek Kopyalama İşlemi');
DBMS_OUTPUT.PUT_LINE( 'Source sistem : '||psource_appname);
DBMS_OUTPUT.PUT_LINE( 'Target sistem : '||ptarget_appname );
DBMS_OUTPUT.PUT_LINE( 'Zaman Aralığı : '||' '||TO_CHAR(pstartdate,'dd-mm-yyyy hh24:mi')||' - '||TO_CHAR(penddate,'dd-mm-yyyy hh24:mi'));
DBMS_OUTPUT.PUT_LINE( 'İşin Çalışma Zamanı : '||TO_CHAR(SYSDATE,'dd-mm-yyyy hh24:mi'));
DBMS_OUTPUT.PUT_LINE( '************************************************ ');
DBMS_OUTPUT.PUT_LINE( '************************************************ ');

open req;
loop
  fetch req into vrequestno;
  exit when req%notfound;
  select requestno.NEXTVAL into vrequestno_nextval from dual;

  select reqdate,opertime,operdate into vreqdate,vopertime,voperdate from request
                where requestno=vrequestno;

  insert into request (  REQUESTNO     ,
             REQDATE       ,
           USERNAME      ,
           STATUS        ,
           REQCOMMENT    ,
           PLANNO        ,
           APPNAME       ,
           DBANAME       ,
           FINISHDATE    ,
           OPERTIME      ,
           WHOFINISHED   ,
           SERNO1        ,
           OPERDATE      ,
           APPROVER      ,
           PROJECTNAME   ,
          PROJECTSEQNO  )
  values (       vrequestno_nextval,
           vreqdate ,
          'aniak',
          'N',
         'Otomatik olarak '||to_char(vrequestno)||' dan üretilmistir ',
          NULL,
          pTarget_AppName,
          NULL,
          NULL,
          vopertime,
          NULL,
          NULL,
          voperdate,
         'sadyi',
          NULL,
          NULL );

   insert into  operation(   REQUESTNO     ,
             OPERNO        ,
          OPERTYPE      ,
          OPERATION     ,
          OPERCOMMENT    )
        Select  vrequestno_nextval, OPERNO  , OPERTYPE ,OPERATION,OPERCOMMENT
        from  operation where requestno=vrequestno;


    DBMS_OUTPUT.PUT_LINE( to_char(vrequestno)||' ---> '||to_char( vrequestno_nextval) );


end loop;

commit;
    DBMS_OUTPUT.PUT_LINE( ' ');
    DBMS_OUTPUT.PUT_LINE( '************************************************ ');
       DBMS_OUTPUT.PUT_LINE( 'İstek Kopyalama Başarılı bitmiştir..');



exception when others then
    DBMS_OUTPUT.PUT_LINE( ' ');
    DBMS_OUTPUT.PUT_LINE( '************************************************ ');
       DBMS_OUTPUT.PUT_LINE( 'Dikkat Hata var.. Kopya İş İstekler oluşturulamadı ');
    RAISE_APPLICATION_ERROR(-20000, SQLERRM);

end;


END;
/
